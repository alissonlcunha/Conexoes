import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;

class TCPServer {
	public static void main(String argv[]) throws Exception {
		String contaCliente = "";
		String resultadoConta = "";
		/* definição do numero da porta */
		int porta = 8080;
		/* atribuicao do numero da porta ao socket */
		ServerSocket socket = new ServerSocket(porta);
		System.out.println("Aguardando conexão na porta " + porta);
		/* laco infinito para o socket aguardar conexao */
		while (true) {
			Socket connectionSocket = socket.accept();
			System.out.println("Cliente conectado");
			BufferedReader entradaCliente = new BufferedReader(
					new InputStreamReader(connectionSocket.getInputStream()));
			DataOutputStream outToClient = new DataOutputStream(connectionSocket.getOutputStream());
			try {
				contaCliente = entradaCliente.readLine();
				String[] expressao = contaCliente.split("(?=[-+*/()])|(?<=[^-+*/][-+*/])|(?<=[()])");
				
				for (int i = 0; i < expressao.length; i++) {
					System.out.print(expressao[i] + " ");
				}
				int aux = 0;
				System.out.println();
				if (expressao[1].equals("-")){
					aux = Integer.parseInt(expressao[0]) - Integer.parseInt(expressao[2]);
				}
				else if (expressao[1].equals("+")){
					aux = Integer.parseInt(expressao[0]) + Integer.parseInt(expressao[2]);
				}
				else if (expressao[1].equals("*")){
					aux = Integer.parseInt(expressao[0]) * Integer.parseInt(expressao[2]);
				}
				else if (expressao[1].equals("/")){
					aux = Integer.parseInt(expressao[0]) + Integer.parseInt(expressao[2]);
				}					
				resultadoConta = Integer.toString(aux);
				outToClient.writeChars(resultadoConta);
			} catch (Exception e) {
				System.out.println("PERDA DA CONEXAO");
			}
			/* fecha a conexão aberta */ 
			connectionSocket.close();
			System.out.println("Conexao fechada");
		}
	}
}





import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.Socket;

class TCPClient {
	public static void main(String argv[]) throws Exception {
		String conta;
		/* cliente insere string no buffer para envio ao servidor */
		BufferedReader inFromUser = new BufferedReader(new InputStreamReader(System.in));
		/* definicao da porta conforme conforme porta do servidor */
		int porta = 8080;
		
		String servidor = "localhost";
		System.out.println("Conectando ao servidor " + servidor + ":" + porta);
		
		Socket clientSocket = null;
		try {
			/* conexao com o servidor */
			clientSocket = new Socket(servidor, porta);
		} catch (Exception e) {
			System.out.println("Não foi possível conectar ao servidor!");
			return;
		}
		DataOutputStream outToServer = new DataOutputStream(clientSocket.getOutputStream());
		
		 /* aguarda resposta do servidor (string com quebra de linha no final \n’)*/
		
		System.out.println("Insira a conta:");
		conta = inFromUser.readLine();
		try {
			outToServer.writeChars(conta + '\n');
		} catch (Exception e) {
			System.out.println("Enemy down!");
			return;
		}
		BufferedReader inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
		/* imprime string recebida do servidor */
		System.out.println("Resultado: " + inFromServer.readLine());
		/* fecha conexao com servidor */
		clientSocket.close();
	}
}
